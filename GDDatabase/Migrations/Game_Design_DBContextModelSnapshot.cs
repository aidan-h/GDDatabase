// <auto-generated />
using System;
using Game_Design_DB.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Game_Design_DB.Migrations
{
    [DbContext(typeof(Game_Design_DBContext))]
    partial class Game_Design_DBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ArticlePerson", b =>
                {
                    b.Property<int>("ArticlesID")
                        .HasColumnType("integer");

                    b.Property<int>("AuthorsID")
                        .HasColumnType("integer");

                    b.HasKey("ArticlesID", "AuthorsID");

                    b.HasIndex("AuthorsID");

                    b.ToTable("ArticlePerson");
                });

            modelBuilder.Entity("BookPerson", b =>
                {
                    b.Property<int>("AuthorsID")
                        .HasColumnType("integer");

                    b.Property<int>("BooksID")
                        .HasColumnType("integer");

                    b.HasKey("AuthorsID", "BooksID");

                    b.HasIndex("BooksID");

                    b.ToTable("BookPerson");
                });

            modelBuilder.Entity("GamePerson", b =>
                {
                    b.Property<int>("GamesID")
                        .HasColumnType("integer");

                    b.Property<int>("PeopleID")
                        .HasColumnType("integer");

                    b.HasKey("GamesID", "PeopleID");

                    b.HasIndex("PeopleID");

                    b.ToTable("GamePerson");
                });

            modelBuilder.Entity("Game_Design_DB.Models.Article", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Website")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("Article");
                });

            modelBuilder.Entity("Game_Design_DB.Models.Book", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<int?>("ISBN")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Website")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("Book");
                });

            modelBuilder.Entity("Game_Design_DB.Models.Developer", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("Developer");
                });

            modelBuilder.Entity("Game_Design_DB.Models.Game", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<int>("DeveloperID")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Website")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.HasIndex("DeveloperID");

                    b.ToTable("Game");
                });

            modelBuilder.Entity("Game_Design_DB.Models.Person", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Website")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("Person");
                });

            modelBuilder.Entity("Game_Design_DB.Models.Podcast", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("URL")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("Podcast");
                });

            modelBuilder.Entity("PersonPodcast", b =>
                {
                    b.Property<int>("PodcastsID")
                        .HasColumnType("integer");

                    b.Property<int>("SpeakersID")
                        .HasColumnType("integer");

                    b.HasKey("PodcastsID", "SpeakersID");

                    b.HasIndex("SpeakersID");

                    b.ToTable("PersonPodcast");
                });

            modelBuilder.Entity("ArticlePerson", b =>
                {
                    b.HasOne("Game_Design_DB.Models.Article", null)
                        .WithMany()
                        .HasForeignKey("ArticlesID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Game_Design_DB.Models.Person", null)
                        .WithMany()
                        .HasForeignKey("AuthorsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BookPerson", b =>
                {
                    b.HasOne("Game_Design_DB.Models.Person", null)
                        .WithMany()
                        .HasForeignKey("AuthorsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Game_Design_DB.Models.Book", null)
                        .WithMany()
                        .HasForeignKey("BooksID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GamePerson", b =>
                {
                    b.HasOne("Game_Design_DB.Models.Game", null)
                        .WithMany()
                        .HasForeignKey("GamesID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Game_Design_DB.Models.Person", null)
                        .WithMany()
                        .HasForeignKey("PeopleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Game_Design_DB.Models.Game", b =>
                {
                    b.HasOne("Game_Design_DB.Models.Developer", "Developer")
                        .WithMany()
                        .HasForeignKey("DeveloperID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Developer");
                });

            modelBuilder.Entity("PersonPodcast", b =>
                {
                    b.HasOne("Game_Design_DB.Models.Podcast", null)
                        .WithMany()
                        .HasForeignKey("PodcastsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Game_Design_DB.Models.Person", null)
                        .WithMany()
                        .HasForeignKey("SpeakersID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
